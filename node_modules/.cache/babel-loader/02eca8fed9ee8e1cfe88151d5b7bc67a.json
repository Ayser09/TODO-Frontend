{"ast":null,"code":"// import React,{  useEffect, useState} from 'react'\n// import { addTask, getTasks, updateTask, deleteTask } from './services/taskServices'\n\n// const Tasks = () => {\n//     const [ tasks , setTasks] = useState({})\n//     const [ currentTask , setCurrentTask] = useState('')\n\n//   useEffect(() =>{\n//     setInterval(() =>{\n//         setTasks('')\n//         setCurrentTask('')\n//     })\n//   })\n\n// const handleChange = e =>{\n//     setCurrentTask(e.target.value)\n// }\n// const handleSubmit = e =>{\n//     e.preventDefault()\n//     try {\n//         const {data} \n//     } catch (error) {\n\n//     }\n// }\n//   return (\n//     <div>Tasks</div>\n//   )\n// }\n\n// export default Tasks\n\nimport { Component } from 'react';\nimport { addTask, getTasks, updateTask, deleteTask } from './services/taskServices';\nclass Tasks extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      tasks: [],\n      currentTask: \"\"\n    };\n    this.handleChange = _ref => {\n      let {\n        currentTarget: input\n      } = _ref;\n      this.setState({\n        currentTask: input.value\n      });\n    };\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const originalTasks = this.state.tasks;\n      try {\n        const {\n          data\n        } = await addTask({\n          task: this.state.currentTask\n        });\n        const tasks = originalTasks;\n        tasks.push(data);\n        this.setState({\n          tasks,\n          currentTask: \"\"\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    this.handleUpdate = async currentTask => {\n      const originalTasks = this.state.tasks;\n      try {\n        const tasks = [...originalTasks];\n        const index = tasks.findIndex(task => task._id === currentTask);\n        tasks[index] = {\n          ...tasks[index]\n        };\n        tasks[index].completed = !tasks[index].completed;\n        this.setState({\n          tasks\n        });\n        await updateTask(currentTask, {\n          completed: tasks[index].completed\n        });\n      } catch (error) {\n        this.setState({\n          tasks: originalTasks\n        });\n        console.log(error);\n      }\n    };\n    this.handleDelete = async currentTask => {\n      const originalTasks = this.state.tasks;\n      try {\n        const tasks = originalTasks.filter(task => task._id !== currentTask);\n        this.setState({\n          tasks\n        });\n        await deleteTask(currentTask);\n      } catch (error) {\n        this.setState({\n          tasks: originalTasks\n        });\n        console.log(error);\n      }\n    };\n  }\n  async componentDidMount() {\n    try {\n      const {\n        data\n      } = await getTasks();\n      this.setState({\n        tasks: data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\nexport default Tasks;","map":{"version":3,"names":["Component","addTask","getTasks","updateTask","deleteTask","Tasks","state","tasks","currentTask","handleChange","currentTarget","input","setState","value","handleSubmit","e","preventDefault","originalTasks","data","task","push","error","console","log","handleUpdate","index","findIndex","_id","completed","handleDelete","filter","componentDidMount"],"sources":["C:/mern/ToDo/frontend/src/Tasks.js"],"sourcesContent":["// import React,{  useEffect, useState} from 'react'\r\n// import { addTask, getTasks, updateTask, deleteTask } from './services/taskServices'\r\n\r\n\r\n// const Tasks = () => {\r\n//     const [ tasks , setTasks] = useState({})\r\n//     const [ currentTask , setCurrentTask] = useState('')\r\n\r\n//   useEffect(() =>{\r\n//     setInterval(() =>{\r\n//         setTasks('')\r\n//         setCurrentTask('')\r\n//     })\r\n//   })\r\n\r\n// const handleChange = e =>{\r\n//     setCurrentTask(e.target.value)\r\n// }\r\n// const handleSubmit = e =>{\r\n//     e.preventDefault()\r\n//     try {\r\n//         const {data} \r\n//     } catch (error) {\r\n        \r\n//     }\r\n// }\r\n//   return (\r\n//     <div>Tasks</div>\r\n//   )\r\n// }\r\n\r\n// export default Tasks\r\n\r\nimport {Component} from 'react'\r\nimport { addTask, getTasks, updateTask, deleteTask } from './services/taskServices'\r\nclass Tasks extends Component {\r\n    state = { tasks:[], currentTask: \"\" }\r\n    async componentDidMount() {\r\n        try {\r\n            const { data } = await getTasks();\r\n            this.setState({ tasks: data });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleChange = ({ currentTarget: input }) => {\r\n        this.setState({ currentTask: input.value });\r\n    };\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const originalTasks = this.state.tasks;\r\n        try {\r\n            const { data } = await addTask({ task: this.state.currentTask });\r\n            const tasks = originalTasks;\r\n            tasks.push(data);\r\n            this.setState({ tasks, currentTask: \"\" });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    handleUpdate = async (currentTask) => {\r\n        const originalTasks = this.state.tasks;\r\n        try {\r\n            const tasks = [...originalTasks];\r\n            const index = tasks.findIndex((task) => task._id === currentTask);\r\n            tasks[index] = { ...tasks[index] };\r\n            tasks[index].completed = !tasks[index].completed;\r\n            this.setState({ tasks });\r\n            await updateTask(currentTask, {\r\n                completed: tasks[index].completed,\r\n            });\r\n        } catch (error) {\r\n            this.setState({ tasks: originalTasks });\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    handleDelete = async (currentTask) => {\r\n        const originalTasks = this.state.tasks;\r\n        try {\r\n            const tasks = originalTasks.filter(\r\n                (task) => task._id !== currentTask\r\n            );\r\n            this.setState({ tasks });\r\n            await deleteTask(currentTask);\r\n        } catch (error) {\r\n            this.setState({ tasks: originalTasks });\r\n            console.log(error);\r\n        }\r\n    };\r\n}\r\n \r\nexport default Tasks;"],"mappings":"AAAA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,SAAQA,SAAS,QAAO,OAAO;AAC/B,SAASC,OAAO,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,UAAU,QAAQ,yBAAyB;AACnF,MAAMC,KAAK,SAASL,SAAS,CAAC;EAAA;IAAA;IAAA,KAC1BM,KAAK,GAAG;MAAEC,KAAK,EAAC,EAAE;MAAEC,WAAW,EAAE;IAAG,CAAC;IAAA,KAUrCC,YAAY,GAAG,QAA8B;MAAA,IAA7B;QAAEC,aAAa,EAAEC;MAAM,CAAC;MACpC,IAAI,CAACC,QAAQ,CAAC;QAAEJ,WAAW,EAAEG,KAAK,CAACE;MAAM,CAAC,CAAC;IAC/C,CAAC;IAAA,KAEDC,YAAY,GAAG,MAAOC,CAAC,IAAK;MACxBA,CAAC,CAACC,cAAc,EAAE;MAClB,MAAMC,aAAa,GAAG,IAAI,CAACX,KAAK,CAACC,KAAK;MACtC,IAAI;QACA,MAAM;UAAEW;QAAK,CAAC,GAAG,MAAMjB,OAAO,CAAC;UAAEkB,IAAI,EAAE,IAAI,CAACb,KAAK,CAACE;QAAY,CAAC,CAAC;QAChE,MAAMD,KAAK,GAAGU,aAAa;QAC3BV,KAAK,CAACa,IAAI,CAACF,IAAI,CAAC;QAChB,IAAI,CAACN,QAAQ,CAAC;UAAEL,KAAK;UAAEC,WAAW,EAAE;QAAG,CAAC,CAAC;MAC7C,CAAC,CAAC,OAAOa,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ,CAAC;IAAA,KAEDG,YAAY,GAAG,MAAOhB,WAAW,IAAK;MAClC,MAAMS,aAAa,GAAG,IAAI,CAACX,KAAK,CAACC,KAAK;MACtC,IAAI;QACA,MAAMA,KAAK,GAAG,CAAC,GAAGU,aAAa,CAAC;QAChC,MAAMQ,KAAK,GAAGlB,KAAK,CAACmB,SAAS,CAAEP,IAAI,IAAKA,IAAI,CAACQ,GAAG,KAAKnB,WAAW,CAAC;QACjED,KAAK,CAACkB,KAAK,CAAC,GAAG;UAAE,GAAGlB,KAAK,CAACkB,KAAK;QAAE,CAAC;QAClClB,KAAK,CAACkB,KAAK,CAAC,CAACG,SAAS,GAAG,CAACrB,KAAK,CAACkB,KAAK,CAAC,CAACG,SAAS;QAChD,IAAI,CAAChB,QAAQ,CAAC;UAAEL;QAAM,CAAC,CAAC;QACxB,MAAMJ,UAAU,CAACK,WAAW,EAAE;UAC1BoB,SAAS,EAAErB,KAAK,CAACkB,KAAK,CAAC,CAACG;QAC5B,CAAC,CAAC;MACN,CAAC,CAAC,OAAOP,KAAK,EAAE;QACZ,IAAI,CAACT,QAAQ,CAAC;UAAEL,KAAK,EAAEU;QAAc,CAAC,CAAC;QACvCK,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ,CAAC;IAAA,KAEDQ,YAAY,GAAG,MAAOrB,WAAW,IAAK;MAClC,MAAMS,aAAa,GAAG,IAAI,CAACX,KAAK,CAACC,KAAK;MACtC,IAAI;QACA,MAAMA,KAAK,GAAGU,aAAa,CAACa,MAAM,CAC7BX,IAAI,IAAKA,IAAI,CAACQ,GAAG,KAAKnB,WAAW,CACrC;QACD,IAAI,CAACI,QAAQ,CAAC;UAAEL;QAAM,CAAC,CAAC;QACxB,MAAMH,UAAU,CAACI,WAAW,CAAC;MACjC,CAAC,CAAC,OAAOa,KAAK,EAAE;QACZ,IAAI,CAACT,QAAQ,CAAC;UAAEL,KAAK,EAAEU;QAAc,CAAC,CAAC;QACvCK,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACtB;IACJ,CAAC;EAAA;EAvDD,MAAMU,iBAAiB,GAAG;IACtB,IAAI;MACA,MAAM;QAAEb;MAAK,CAAC,GAAG,MAAMhB,QAAQ,EAAE;MACjC,IAAI,CAACU,QAAQ,CAAC;QAAEL,KAAK,EAAEW;MAAK,CAAC,CAAC;IAClC,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ;AAiDJ;AAEA,eAAehB,KAAK"},"metadata":{},"sourceType":"module"}